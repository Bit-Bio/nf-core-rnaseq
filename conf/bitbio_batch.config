// Config for aws batch on bitbio

params {
  config_profile_name = 'AWS Batch profile'
  config_profile_description = 'This is the core profile for running Nextflow jobs on BitBio AWS Batch'
  config_profile_contact = ''

  awsqueue = 'highpriority-eb16b4c0-d8dc-11ea-922f-0a0207fddeaf'
  awsregion = 'us-east-1'

  // Using our in-house genomes
  fasta = "s3://bitbio.nextflow/pipelines/nf-core-rnaseq/genome/GRCh38.primary_assembly.genome.fa"
  gtf   =  "s3://bitbio.nextflow/pipelines/nf-core-rnaseq/genome/gencode.v32.primary_assembly.annotation.gtf"

  // Some general settings
  pseudo_aligner = 'salmon'
  umitools_extract_method = "string"
  umitools_bc_pattern = "NNNNNNNNNNNN"
  gencode = true

  awscli = '/home/ec2-user/miniconda/bin/aws'

}

aws {
    region = params.awsregion
    batch.cliPath = params.awscli
}

docker {
    enabled = true
    // Avoid this error:
    // WARNING: Your kernel does not support swap limit capabilities or the cgroup is not mounted. Memory limited without swap.
    // Testing this in nf-core after discussion here https://github.com/nf-core/tools/pull/351
    // once this is established and works well, nextflow might implement this behavior as new default.
    runOptions = '-u \$(id -u):\$(id -g)'
    // For info on the z flag look here: https://github.com/nf-core/nanoseq/issues/74
    fixOwnership = true
}

// Check why this needs to be in 2 places, may be an old NF method
process {
    queue = params.awsqueue
    executor = 'awsbatch'
}

